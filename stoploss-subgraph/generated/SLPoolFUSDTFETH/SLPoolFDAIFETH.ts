// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class StopLossCreated extends ethereum.Event {
  get params(): StopLossCreated__Params {
    return new StopLossCreated__Params(this);
  }
}

export class StopLossCreated__Params {
  _event: StopLossCreated;

  constructor(event: StopLossCreated) {
    this._event = event;
  }

  get uniPair(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get orderNumber(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get orderer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get delegated(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }

  get lpAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get tokenToGuarantee(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get amountToGuarantee(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get tokenIn(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get ratio(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class StopLossExecuted extends ethereum.Event {
  get params(): StopLossExecuted__Params {
    return new StopLossExecuted__Params(this);
  }
}

export class StopLossExecuted__Params {
  _event: StopLossExecuted;

  constructor(event: StopLossExecuted) {
    this._event = event;
  }

  get uniPair(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get orderNumber(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get orderer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get liquidator(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get lpAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get tokenWithdrawn(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get amountWithdrawn(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get tokenToLiquidator(): Address {
    return this._event.parameters[7].value.toAddress();
  }

  get amountToLiquidator(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class Update extends ethereum.Event {
  get params(): Update__Params {
    return new Update__Params(this);
  }
}

export class Update__Params {
  _event: Update;

  constructor(event: Update) {
    this._event = event;
  }

  get timeStamp(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newPriceA(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get newRatioA(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get newRatioB(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class WithdrawStopLoss extends ethereum.Event {
  get params(): WithdrawStopLoss__Params {
    return new WithdrawStopLoss__Params(this);
  }
}

export class WithdrawStopLoss__Params {
  _event: WithdrawStopLoss;

  constructor(event: WithdrawStopLoss) {
    this._event = event;
  }

  get uniPair(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get orderNumber(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get withdrawer(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get lpAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get tokenWithdrawn(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get amountWithdrawn(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class SLPoolFDAIFETH__getStopOrdersTokenAResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: Address, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class SLPoolFDAIFETH__getStopOrdersTokenBResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: Address, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }
}

export class SLPoolFDAIFETH extends ethereum.SmartContract {
  static bind(address: Address): SLPoolFDAIFETH {
    return new SLPoolFDAIFETH("SLPoolFDAIFETH", address);
  }

  PERIOD(): BigInt {
    let result = super.call("PERIOD", "PERIOD():(uint256)", []);

    return result[0].toBigInt();
  }

  try_PERIOD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("PERIOD", "PERIOD():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  WETH(): Address {
    let result = super.call("WETH", "WETH():(address)", []);

    return result[0].toAddress();
  }

  try_WETH(): ethereum.CallResult<Address> {
    let result = super.tryCall("WETH", "WETH():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  blockTimestampLast(): BigInt {
    let result = super.call(
      "blockTimestampLast",
      "blockTimestampLast():(uint32)",
      []
    );

    return result[0].toBigInt();
  }

  try_blockTimestampLast(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "blockTimestampLast",
      "blockTimestampLast():(uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getLpAmount(): BigInt {
    let result = super.call("getLpAmount", "getLpAmount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getLpAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getLpAmount", "getLpAmount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getStopOrdersTokenA(
    param0: BigInt
  ): SLPoolFDAIFETH__getStopOrdersTokenAResult {
    let result = super.call(
      "getStopOrdersTokenA",
      "getStopOrdersTokenA(uint256):(address,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new SLPoolFDAIFETH__getStopOrdersTokenAResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_getStopOrdersTokenA(
    param0: BigInt
  ): ethereum.CallResult<SLPoolFDAIFETH__getStopOrdersTokenAResult> {
    let result = super.tryCall(
      "getStopOrdersTokenA",
      "getStopOrdersTokenA(uint256):(address,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SLPoolFDAIFETH__getStopOrdersTokenAResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  getStopOrdersTokenB(
    param0: BigInt
  ): SLPoolFDAIFETH__getStopOrdersTokenBResult {
    let result = super.call(
      "getStopOrdersTokenB",
      "getStopOrdersTokenB(uint256):(address,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new SLPoolFDAIFETH__getStopOrdersTokenBResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_getStopOrdersTokenB(
    param0: BigInt
  ): ethereum.CallResult<SLPoolFDAIFETH__getStopOrdersTokenBResult> {
    let result = super.tryCall(
      "getStopOrdersTokenB",
      "getStopOrdersTokenB(uint256):(address,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new SLPoolFDAIFETH__getStopOrdersTokenBResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  inverted(): boolean {
    let result = super.call("inverted", "inverted():(bool)", []);

    return result[0].toBoolean();
  }

  try_inverted(): ethereum.CallResult<boolean> {
    let result = super.tryCall("inverted", "inverted():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isWETH(): boolean {
    let result = super.call("isWETH", "isWETH():(bool)", []);

    return result[0].toBoolean();
  }

  try_isWETH(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isWETH", "isWETH():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  lastRatioA(): BigInt {
    let result = super.call("lastRatioA", "lastRatioA():(uint256)", []);

    return result[0].toBigInt();
  }

  try_lastRatioA(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("lastRatioA", "lastRatioA():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  lastRatioB(): BigInt {
    let result = super.call("lastRatioB", "lastRatioB():(uint256)", []);

    return result[0].toBigInt();
  }

  try_lastRatioB(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("lastRatioB", "lastRatioB():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  oracle(): Address {
    let result = super.call("oracle", "oracle():(address)", []);

    return result[0].toAddress();
  }

  try_oracle(): ethereum.CallResult<Address> {
    let result = super.tryCall("oracle", "oracle():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  poolFactory(): Address {
    let result = super.call("poolFactory", "poolFactory():(address)", []);

    return result[0].toAddress();
  }

  try_poolFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall("poolFactory", "poolFactory():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  priceA(): BigInt {
    let result = super.call("priceA", "priceA():(uint256)", []);

    return result[0].toBigInt();
  }

  try_priceA(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("priceA", "priceA():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  reserveA(): BigInt {
    let result = super.call("reserveA", "reserveA():(uint256)", []);

    return result[0].toBigInt();
  }

  try_reserveA(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("reserveA", "reserveA():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  reserveB(): BigInt {
    let result = super.call("reserveB", "reserveB():(uint256)", []);

    return result[0].toBigInt();
  }

  try_reserveB(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("reserveB", "reserveB():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenA(): Address {
    let result = super.call("tokenA", "tokenA():(address)", []);

    return result[0].toAddress();
  }

  try_tokenA(): ethereum.CallResult<Address> {
    let result = super.tryCall("tokenA", "tokenA():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenB(): Address {
    let result = super.call("tokenB", "tokenB():(address)", []);

    return result[0].toAddress();
  }

  try_tokenB(): ethereum.CallResult<Address> {
    let result = super.tryCall("tokenB", "tokenB():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalLpSupply(): BigInt {
    let result = super.call("totalLpSupply", "totalLpSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalLpSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalLpSupply",
      "totalLpSupply():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  uniPair(): Address {
    let result = super.call("uniPair", "uniPair():(address)", []);

    return result[0].toAddress();
  }

  try_uniPair(): ethereum.CallResult<Address> {
    let result = super.tryCall("uniPair", "uniPair():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  uniRouter(): Address {
    let result = super.call("uniRouter", "uniRouter():(address)", []);

    return result[0].toAddress();
  }

  try_uniRouter(): ethereum.CallResult<Address> {
    let result = super.tryCall("uniRouter", "uniRouter():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  uniswapFactory(): Address {
    let result = super.call("uniswapFactory", "uniswapFactory():(address)", []);

    return result[0].toAddress();
  }

  try_uniswapFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "uniswapFactory",
      "uniswapFactory():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  update(): BigInt {
    let result = super.call("update", "update():(uint256)", []);

    return result[0].toBigInt();
  }

  try_update(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("update", "update():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class _executeStopLossEthCall extends ethereum.Call {
  get inputs(): _executeStopLossEthCall__Inputs {
    return new _executeStopLossEthCall__Inputs(this);
  }

  get outputs(): _executeStopLossEthCall__Outputs {
    return new _executeStopLossEthCall__Outputs(this);
  }
}

export class _executeStopLossEthCall__Inputs {
  _call: _executeStopLossEthCall;

  constructor(call: _executeStopLossEthCall) {
    this._call = call;
  }

  get stopLossindex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class _executeStopLossEthCall__Outputs {
  _call: _executeStopLossEthCall;

  constructor(call: _executeStopLossEthCall) {
    this._call = call;
  }
}

export class _executeStopLossTokenCall extends ethereum.Call {
  get inputs(): _executeStopLossTokenCall__Inputs {
    return new _executeStopLossTokenCall__Inputs(this);
  }

  get outputs(): _executeStopLossTokenCall__Outputs {
    return new _executeStopLossTokenCall__Outputs(this);
  }
}

export class _executeStopLossTokenCall__Inputs {
  _call: _executeStopLossTokenCall;

  constructor(call: _executeStopLossTokenCall) {
    this._call = call;
  }

  get stopLossindex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class _executeStopLossTokenCall__Outputs {
  _call: _executeStopLossTokenCall;

  constructor(call: _executeStopLossTokenCall) {
    this._call = call;
  }
}

export class _executeStopLossTokenWethCall extends ethereum.Call {
  get inputs(): _executeStopLossTokenWethCall__Inputs {
    return new _executeStopLossTokenWethCall__Inputs(this);
  }

  get outputs(): _executeStopLossTokenWethCall__Outputs {
    return new _executeStopLossTokenWethCall__Outputs(this);
  }
}

export class _executeStopLossTokenWethCall__Inputs {
  _call: _executeStopLossTokenWethCall;

  constructor(call: _executeStopLossTokenWethCall) {
    this._call = call;
  }

  get stopLossindex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class _executeStopLossTokenWethCall__Outputs {
  _call: _executeStopLossTokenWethCall;

  constructor(call: _executeStopLossTokenWethCall) {
    this._call = call;
  }
}

export class _stopLossCall extends ethereum.Call {
  get inputs(): _stopLossCall__Inputs {
    return new _stopLossCall__Inputs(this);
  }

  get outputs(): _stopLossCall__Outputs {
    return new _stopLossCall__Outputs(this);
  }
}

export class _stopLossCall__Inputs {
  _call: _stopLossCall;

  constructor(call: _stopLossCall) {
    this._call = call;
  }

  get lpAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get tokenToGuarantee(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amountToGuarantee(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get tokenIn(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get delegated(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class _stopLossCall__Outputs {
  _call: _stopLossCall;

  constructor(call: _stopLossCall) {
    this._call = call;
  }
}

export class _stopLossFromTokenCall extends ethereum.Call {
  get inputs(): _stopLossFromTokenCall__Inputs {
    return new _stopLossFromTokenCall__Inputs(this);
  }

  get outputs(): _stopLossFromTokenCall__Outputs {
    return new _stopLossFromTokenCall__Outputs(this);
  }
}

export class _stopLossFromTokenCall__Inputs {
  _call: _stopLossFromTokenCall;

  constructor(call: _stopLossFromTokenCall) {
    this._call = call;
  }

  get tokenIn(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amountToSend(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get amountToGuarantee(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get fromEther(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }
}

export class _stopLossFromTokenCall__Outputs {
  _call: _stopLossFromTokenCall;

  constructor(call: _stopLossFromTokenCall) {
    this._call = call;
  }
}

export class _withdrawStopLossEthCall extends ethereum.Call {
  get inputs(): _withdrawStopLossEthCall__Inputs {
    return new _withdrawStopLossEthCall__Inputs(this);
  }

  get outputs(): _withdrawStopLossEthCall__Outputs {
    return new _withdrawStopLossEthCall__Outputs(this);
  }
}

export class _withdrawStopLossEthCall__Inputs {
  _call: _withdrawStopLossEthCall;

  constructor(call: _withdrawStopLossEthCall) {
    this._call = call;
  }

  get stopLossindex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class _withdrawStopLossEthCall__Outputs {
  _call: _withdrawStopLossEthCall;

  constructor(call: _withdrawStopLossEthCall) {
    this._call = call;
  }
}

export class _withdrawStopLossTokenCall extends ethereum.Call {
  get inputs(): _withdrawStopLossTokenCall__Inputs {
    return new _withdrawStopLossTokenCall__Inputs(this);
  }

  get outputs(): _withdrawStopLossTokenCall__Outputs {
    return new _withdrawStopLossTokenCall__Outputs(this);
  }
}

export class _withdrawStopLossTokenCall__Inputs {
  _call: _withdrawStopLossTokenCall;

  constructor(call: _withdrawStopLossTokenCall) {
    this._call = call;
  }

  get stopLossindex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class _withdrawStopLossTokenCall__Outputs {
  _call: _withdrawStopLossTokenCall;

  constructor(call: _withdrawStopLossTokenCall) {
    this._call = call;
  }
}

export class _withdrawStopLossTokenWethCall extends ethereum.Call {
  get inputs(): _withdrawStopLossTokenWethCall__Inputs {
    return new _withdrawStopLossTokenWethCall__Inputs(this);
  }

  get outputs(): _withdrawStopLossTokenWethCall__Outputs {
    return new _withdrawStopLossTokenWethCall__Outputs(this);
  }
}

export class _withdrawStopLossTokenWethCall__Inputs {
  _call: _withdrawStopLossTokenWethCall;

  constructor(call: _withdrawStopLossTokenWethCall) {
    this._call = call;
  }

  get stopLossindex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class _withdrawStopLossTokenWethCall__Outputs {
  _call: _withdrawStopLossTokenWethCall;

  constructor(call: _withdrawStopLossTokenWethCall) {
    this._call = call;
  }
}

export class ExecuteStopLossCall extends ethereum.Call {
  get inputs(): ExecuteStopLossCall__Inputs {
    return new ExecuteStopLossCall__Inputs(this);
  }

  get outputs(): ExecuteStopLossCall__Outputs {
    return new ExecuteStopLossCall__Outputs(this);
  }
}

export class ExecuteStopLossCall__Inputs {
  _call: ExecuteStopLossCall;

  constructor(call: ExecuteStopLossCall) {
    this._call = call;
  }

  get stopLossindex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ExecuteStopLossCall__Outputs {
  _call: ExecuteStopLossCall;

  constructor(call: ExecuteStopLossCall) {
    this._call = call;
  }
}

export class InitPriceCall extends ethereum.Call {
  get inputs(): InitPriceCall__Inputs {
    return new InitPriceCall__Inputs(this);
  }

  get outputs(): InitPriceCall__Outputs {
    return new InitPriceCall__Outputs(this);
  }
}

export class InitPriceCall__Inputs {
  _call: InitPriceCall;

  constructor(call: InitPriceCall) {
    this._call = call;
  }
}

export class InitPriceCall__Outputs {
  _call: InitPriceCall;

  constructor(call: InitPriceCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _uniPair(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _token1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _token2(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _oracle(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _WETH(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _uniswapFactory(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _uniRouter(): Address {
    return this._call.inputValues[6].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class StopLossCall extends ethereum.Call {
  get inputs(): StopLossCall__Inputs {
    return new StopLossCall__Inputs(this);
  }

  get outputs(): StopLossCall__Outputs {
    return new StopLossCall__Outputs(this);
  }
}

export class StopLossCall__Inputs {
  _call: StopLossCall;

  constructor(call: StopLossCall) {
    this._call = call;
  }

  get lpAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get tokenToGuarantee(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amountToGuarantee(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class StopLossCall__Outputs {
  _call: StopLossCall;

  constructor(call: StopLossCall) {
    this._call = call;
  }
}

export class StopLossFromEtherCall extends ethereum.Call {
  get inputs(): StopLossFromEtherCall__Inputs {
    return new StopLossFromEtherCall__Inputs(this);
  }

  get outputs(): StopLossFromEtherCall__Outputs {
    return new StopLossFromEtherCall__Outputs(this);
  }
}

export class StopLossFromEtherCall__Inputs {
  _call: StopLossFromEtherCall;

  constructor(call: StopLossFromEtherCall) {
    this._call = call;
  }

  get ethToGuarantee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class StopLossFromEtherCall__Outputs {
  _call: StopLossFromEtherCall;

  constructor(call: StopLossFromEtherCall) {
    this._call = call;
  }
}

export class StopLossFromTokenCall extends ethereum.Call {
  get inputs(): StopLossFromTokenCall__Inputs {
    return new StopLossFromTokenCall__Inputs(this);
  }

  get outputs(): StopLossFromTokenCall__Outputs {
    return new StopLossFromTokenCall__Outputs(this);
  }
}

export class StopLossFromTokenCall__Inputs {
  _call: StopLossFromTokenCall;

  constructor(call: StopLossFromTokenCall) {
    this._call = call;
  }

  get tokenIn(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amountToSend(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get amountToGuarantee(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class StopLossFromTokenCall__Outputs {
  _call: StopLossFromTokenCall;

  constructor(call: StopLossFromTokenCall) {
    this._call = call;
  }
}

export class SyncCall extends ethereum.Call {
  get inputs(): SyncCall__Inputs {
    return new SyncCall__Inputs(this);
  }

  get outputs(): SyncCall__Outputs {
    return new SyncCall__Outputs(this);
  }
}

export class SyncCall__Inputs {
  _call: SyncCall;

  constructor(call: SyncCall) {
    this._call = call;
  }
}

export class SyncCall__Outputs {
  _call: SyncCall;

  constructor(call: SyncCall) {
    this._call = call;
  }
}

export class UpdateCall extends ethereum.Call {
  get inputs(): UpdateCall__Inputs {
    return new UpdateCall__Inputs(this);
  }

  get outputs(): UpdateCall__Outputs {
    return new UpdateCall__Outputs(this);
  }
}

export class UpdateCall__Inputs {
  _call: UpdateCall;

  constructor(call: UpdateCall) {
    this._call = call;
  }
}

export class UpdateCall__Outputs {
  _call: UpdateCall;

  constructor(call: UpdateCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get stopLossindex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
